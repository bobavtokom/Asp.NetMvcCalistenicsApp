@model IEnumerable<Calistenics.Models.Excercise>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
    @using (Html.BeginForm()) {
    <p>
        Level: @Html.DropDownList("searchLevel", "All");
        Title: @Html.TextBox("searchExercise")
        <input type="submit" value="search" />
    </p>
}
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Level)
            </th>
            <th>
                Video
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Level)
                </td>
                <td>
                    @if (!string.IsNullOrEmpty(item.Url)) {
                        string videoId = GetYouTubeVideoId(item.Url);
                        if (!string.IsNullOrEmpty(videoId)) {
                            <iframe width="280" height="157" src="https://www.youtube.com/embed/@videoId" frameborder="0" allowfullscreen></iframe>
                        } else {
                            <p>Invalid YouTube URL</p>
                        }
                    } else {
                        <p>No video URL provided</p>
                    }
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>

    @functions {
        private string GetYouTubeVideoId(string url) {
            try {
                var uri = new Uri(url);
                var queryString = uri.Query;
                var queryDictionary = HttpUtility.ParseQueryString(queryString);
                return queryDictionary["v"];
            }
            catch {
                return null;
            }
        }
    }
